<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd" objectQuotingStrategy="QUOTE_ONLY_RESERVED_WORDS">
    <changeSet id="1745160860382-1" author="vibe-json">
        <sql>
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('details.starters[n].rabbitmqConsumer', '{"queue": "qName", "connectionDef": {"userName": "guest", "userPass": "guest", "addresses": ["localhost:5672"], "virtualHost": "/"}, "outputTemplate": {"order": "jp{payload}"}, "payloadValidateSchema": {}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('details.starters[n].kafkaConsumer', '{"topic": "rtk-kion", "connectionDef": {"authDef": {"tls": {"keyStoreKey": "", "trustStoreType": "PEM", "keyStoreCertificates": "", "trustStoreCertificates": ""}, "type": "TLS"}, "bootstrapServers": "11.111.111.11:9094"}, "outputTemplate": {"payload": "jp{payload}"}, "keyValidateSchema": {}, "headersValidateSchema": {}, "payloadValidateSchema": {}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('details.starters[n].sapInbound', '{"inboundDef": {"name": "sapInbound-SAP-LP", "props": {"jco.server.gwhost": "/H/test.ru/S/3310", "jco.server.gwserv": "sap", "jco.server.progid": "L_1", "jco.server.connection_count": 2}, "connectionDef": {"name": "sapConnection-SAP-LP", "props": {"jco.client.lang": "EN", "jco.client.user": "user", "jco.client.sysnr": 10, "jco.client.ashost": "m-1.teat.ru", "jco.client.client": 400, "jco.client.passwd": "passwd", "jco.destination.peak_limit": 10, "jco.destination.pool_capacity": 3}}}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('details.starters[n].scheduler', '{"cron": {"hour": "0", "month": "*/2", "minute": "0", "dayOfWeek": "0", "dayOfMonth": "1"}, "type": "cron", "endDateTime": "2025-03-06T08:39:30.446Z", "startDateTime": "2025-03-06T08:39:30.446Z"}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('details.starters[n].mailConsumer', '{"mailFilter": {"senders": ["mymail@mail.ru"], "subjects": ["topic1", "topic2"], "startMailDateTime": "2025-01-01T10:01:23.000+03:00"}, "connectionDef": {"host": "imap.yandex.ru", "port": 993, "mailAuth": {"password": "test", "username": "test@test.test"}, "protocol": "imap"}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('workflowCall.workflowDef.details.databaseCallConfig', '{"dataSourceDef": {"url": "jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=11.111.0.111)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=TS)))", "userName": "", "userPass": "", "className": "oracle.jdbc.OracleDriver"}, "databaseCallDef": {"sql": "select * from table(d.pkg_1c.d001(to_date(''29.01.2025 0:37:48'',''dd.mm.yyyy hh24:mi:ss'')))", "type": "select"}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('workflowCall.workflowDef.details.sendToKafkaConfig', '{"key": "jp{sd_status}", "topic": "testing", "message": {"payload": {"data": {"error": {"code": "jp{$.respCode}", "description": "Неизвестная ошибка"}, "eventType": "jp{$.data.eventType}", "serviceID": "jp{$.data.serviceDeskID}", "applicationID": ""}, "version": "1.0.0", "createdAt": "lua{return math.floor(os.time()+0.5)}lua", "messageType": "RequestCreated", "transactionID": "jp{$.transactionID}"}}, "connectionDef": {"authDef": {"sasl": {"sslDef": {"trustStoreType": "PEM", "trustStoreCertificates": "-----BEGIN CERTIFICATE-----\n"}, "password": "password", "protocol": "SASL_SSL", "username": "username", "mechanism": "SCRAM-SHA-512"}, "type": "SASL"}, "bootstrapServers": "bootstrap-kafka.ru:443"}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('workflowCall.workflowDef.details.sendToS3Config', '{"bucket": "bucket1", "region": "msk-1", "s3File": {"content": "jp{sd_body}", "filePath": "loadTestFile.txt"}, "connectionDef": {"authDef": {"type": "accessKey", "accessKeyAuth": {"accessKey": "accessKey", "secretKey": "secretKey"}}, "endpoint": "https://s3.ru"}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('workflowCall.workflowDef.details.sendToSapConfig', '{"idoc": {"xml": "jp{sap_xml}"}, "connectionDef": {"props": {"jco.client.lang": "EN", "jco.client.user": "user", "jco.client.sysnr": 10, "jco.client.ashost": "t.t.ru", "jco.client.client": 400, "jco.client.passwd": "passwd", "jco.destination.peak_limit": 10, "jco.destination.pool_capacity": 3}}}');
            INSERT INTO public.workflow_configuration (json_path, json) VALUES ('workflowCall.workflowDef.details.transformConfig', '{"type": "xml_to_json", "target": {"xml": {"idoc_json": "jp{xsltTransformResult}"}}}');
        </sql>
    </changeSet>
</databaseChangeLog>