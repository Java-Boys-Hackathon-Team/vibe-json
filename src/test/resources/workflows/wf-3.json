{
  "name": "SAP-LP",
  "type": "complex",
  "description": "",
  "compiled": {
    "activities": [
      {
        "id": "activity-1",
        "type": "workflow_call",
        "description": "",
        "workflowCall": {
          "workflowDef": {
            "type": "transform",
            "details": {
              "transformConfig": {
                "type": "xml_to_json",
                "target": {
                  "json": "jp{idoc}"
                }
              },
              "outputValidateSchema": {
                "type": "object",
                "required": [
                  "json"
                ],
                "properties": {
                  "json": {
                    "type": "object",
                    "required": [
                      "IDOC"
                    ],
                    "properties": {
                      "IDOC": {
                        "type": "object",
                        "required": [
                          "EDI_DC40"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "transition": "activity-2"
      },
      {
        "id": "activity-2",
        "type": "inject",
        "description": "",
        "injectData": {
          "order": {
            "specversion": "1.0",
            "datacontenttype": "application/json",
            "id": "jp{json.IDOC.EDI_DC40.DOCNUM}",
            "source": "/rtk/sap/",
            "time": "lua{\r\nCREDAT = wf.vars.json.IDOC.EDI_DC40.CREDAT\r\nCRETIM = wf.vars.json.IDOC.EDI_DC40.CRETIM\r\nlocal function safe_sub(str, start, finish)\r\n\tlocal s = string.sub(str, start, math.min(finish, #str))\r\n\treturn s ~= \"\" and s or \"00\"\r\nend \r\nyear = safe_sub(CREDAT, 1, 4)\r\nmonth = safe_sub(CREDAT, 5, 6)\r\nday = safe_sub(CREDAT, 7, 8) \r\nhour = safe_sub(CRETIM, 1, 2)\r\nminute = safe_sub(CRETIM, 3, 4)\r\nsecond = safe_sub(CRETIM, 5, 6) \r\niso_date = string.format(\r\n\t'%s-%s-%sT%s:%s:%s.00000Z',\r\n\tyear, month, day,\r\n\thour, minute, second\r\n) \r\nreturn iso_date \r\n}lua",  "subject": "jp{json.IDOC.E1ADHDR.E1STATE.ZOEBS_ALEAUD01.DELIVERYORDERID}",
          "type": "rtkSap_orderStatus", "correlationid": "lua{\n-- Функция для генерации случайного UUID версии 4\nlocal function generateUUID()\n local random = math.random\n local template ='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n return string.gsub(template, '[xy]', function (c)\n local v = (c == 'x') and random(0, 15) or random(8, 11)\n return string.format('%x', v)\n end)\nend\n\n-- Генерация и возврат UUID\nreturn generateUUID()\n}lua",
        "data": {
          "deliveryOrderId": "jp{json.IDOC.E1ADHDR.E1STATE.ZOEBS_ALEAUD01.DELIVERYORDERID}",
          "state": "jp{json.IDOC.E1ADHDR.E1STATE.STAPA4_LNG}"
        }
      }
    },
      "transition": "activity-3"
      },
      {
        "id": "activity-3",
        "type": "workflow_call",
        "description": "",
        "workflowCall": {
          "workflowDef": {
            "type": "send_to_kafka",
            "details": {
              "sendToKafkaConfig": {
                "topic": "spa-1",
                "key": "jp{wf.businessKey}",
                "message": {
                  "payload": " jp{order}"
                },
                "connectionDef": {
                  "bootstrapServers": "bootstrap.kafka.ru:443",
                  "authDef": {
                    "type": "SASL",
                    "sasl": {
                      "protocol": "SASL_SSL",
                      "mechanism": "OAUTHBEARER",
                      "username": "",
                      "password": "",
                      "sslDef": {
                        "trustStoreType": "PEM",
                        "trustStoreCertificates": ""
                      },
                      "tokenUrl": "https://isso.mts.ru/auth/"
                    }
                  }
                }
              }
            }
          }
        }
      }
    ],
    "start": "activity-1"
  },
  "flowEditorConfig": {
    "startMetadata": {
      "position": {
        "x": 34,
        "y": 44
      },
      "isDeveloperMode": false,
      "isDeveloperModeVerify": false,
      "isDeveloperModeError": false,
      "developerModeErrors": []
    },
    "activityMetadata": {
      "activity-1": {
        "position": {
          "x": 197.5,
          "y": 44
        },
        "mock": {
          "data": {
            "result": {}
          }
        },
        "isDeveloperMode": false,
        "isDeveloperModeVerify": false,
        "isDeveloperModeError": false,
        "developerModeErrors": []
      },
      "activity-2": {
        "position": {
          "x": 406.5,
          "y": 44
        },
        "mock": {
          "data": {
            "result": {}
          }
        },
        "isDeveloperMode": false,
        "isDeveloperModeVerify": false,
        "isDeveloperModeError": false,
        "developerModeErrors": []
      },
      "activity-3": {
        "position": {
          "x": 615.5,
          "y": 44
        },
        "mock": {
          "data": {
            "result": {}
          }
        },
        "ims": [
          ""
        ],
        "isDeveloperMode": false,
        "isDeveloperModeVerify": false,
        "isDeveloperModeError": false,
        "developerModeErrors": []
      }
    },
    "horizontalLayout": true
  },
  "details": {
    "inputValidateSchema": {},
    "starters": [
      {
        "type": "sap_inbound",
        "sapInbound": {
          "inboundDef": {
            "name": "sapInbound-SAP-LP",
            "connectionDef": {
              "name": "sapConnection-SAP-LP",
              "props": {
                "jco.client.lang": "EN",
                "jco.destination.peak_limit": 10,
                "jco.client.client": 400,
                "jco.client.sysnr": 10,
                "jco.destination.pool_capacity": 3,
                "jco.client.ashost": "m-1.teat.ru",
                "jco.client.user": "user",
                "jco.client.passwd": "passwd"
              }
            },
            "props": {
              "jco.server.gwhost": "/H/test.ru/S/3310",
              "jco.server.progid": "L_1",
              "jco.server.gwserv": "sap",
              "jco.server.connection_count": 2
            }
          }
        }
      }
    ]
  }
}